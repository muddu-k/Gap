<jav:JavaScript xmlns:jav="http://dto.wa.ca.com/javascript">
  <jav:name>BMRTRIGGER</jav:name>
  <jav:script_definition name="BMRTRIGGER" language="JavaScript" runInParallel="true"><![CDATA[var len = APPL._eventname.length;
APPL.BMREMAILDG = getVar('BMREMAILDG', 'BMR');
APPL.restriction =getVar('RESTRICTION', 'BMR');
APPL.message = '';
APPL.event='INVALID';
APPL.eventprefix='INVALID';
APPL.dt='';
APPL.date='';
APPL.tp='ADD';
APPL.type='ADD';
APPL.eventnm = 'INVALID';
APPL.runme = 'false';
APPL.action = 'TRIGGER';
APPL.jobcnt = 0;
APPL.appcnt = 0;
APPL.parm1='';
APPL.parm2='';
APPL.parm3='';
APPL.parm4='';
APPL.jobs='';
function countit(a,b) {
  if (a == null){
		return(0);
  }else
  {
    return ((a.split(b)).length);
  }
}

function ValidateDate(txtDate)
{
    var currVal = txtDate;
    if(currVal == '')
        return false;

    var rxDatePattern = /^(\d{4})(\/|-)(\d{1,2})(\/|-)(\d{1,2}) (20|21|22|23|[0-1]?\d{1}):([0-5]?\d{1})$/; //Declare Regex
    var dtArray = currVal.match(rxDatePattern); // is format OK?

    if (dtArray == null) 
        return false;

    //Checks for mm/dd/yyyy format.
    dtMonth = dtArray[3];
    dtDay= dtArray[5];
    dtYear = dtArray[1];        

    if (dtMonth < 1 || dtMonth > 12) 
        return false;
    else if (dtDay < 1 || dtDay> 31) 
        return false;
    else if ((dtMonth==4 || dtMonth==6 || dtMonth==9 || dtMonth==11) && dtDay ==31) 
        return false;
    else if (dtMonth == 2) 
    {
        var isleap = (dtYear % 4 == 0 && (dtYear % 100 != 0 || dtYear % 400 == 0));
        if (dtDay> 29 || (dtDay ==29 && !isleap)) 
                return false;
    }
    return true;
}
if ((APPL._user1 == null) || (APPL.restriction == 'YES') || ((APPL._user1.search(/\./)) == -1)) {
    APPL.message = '';
    APPL.runme = 'false';
    if (APPL.restriction == 'YES') {
        APPL.message = 'BMR Access is restricted until further notice, Please contact BatchOps for Assistance.';
    }else if (APPL._user1 == null)  {
        APPL.message = 'User1(event name) cannot be blank.';
    }
	else {
        APPL.message = 'Please enter user1(event name) with event prefix.';
    }
	
}
else{
	APPL.event = (((APPL._user1.toUpperCase()).replace(/\s/gm, '')).split('.'))[1];
	APPL.eventprefix = (((APPL._user1.toUpperCase()).replace(/\s/gm, '')).split('.'))[0];
	if (APPL._eventname == (APPL.event.substring(0, len))) {
    	APPL.runme = 'true';
		APPL.eventnm=(APPL.eventprefix)+"_"+APPL.event;
		if (APPL._user2 != null){
			if ((countit(APPL._user2,',')) == 1) {
				APPL.tp = ((APPL._user2.toUpperCase()).replace(/\s/gm, ''));
			}
			else if ((countit(APPL._user2,',')) == 5){
				var user2lst = APPL._user2.split(',');
				APPL.tp = (((user2lst[0]).toUpperCase()).replace(/\s/gm, ''));
				APPL.parm1 = user2lst[1];
				APPL.parm2 = user2lst[2];
				APPL.parm3 = user2lst[3];
				APPL.parm4 = user2lst[4];
			}
			else{
				APPL.message = APPL.message + ' To pass user parameters to the jobs please enter user2 value in format ADD/REPLACE,parm1,parm2,parm3,parm4 .';
				APPL.runme = 'false';
			}
			if ((APPL.tp != 'ADD') && (APPL.tp != 'REPLACE')){
				APPL.message = APPL.message + ' User2 value need to be ADD or REPLACE.';
				APPL.runme = 'false';
			}
			else {
				APPL.type = APPL.tp
			}
		}
		else{
			APPL.type = 'ADD';	
		}
		if (APPL._user3 != null){
			APPL.jobs = ((APPL._user3.toUpperCase()).replace(/\s/gm, ''));
		}
		if (APPL._user4 != null){
			//APPL.dt = ((APPL._user4).replace(/\s/g, ''));
			APPL.dt = APPL._user4
			if (ValidateDate(APPL.dt)){
				if ((daysFrom(APPL.dt)) < 0){
					APPL.message = APPL.message + ' Please enter past date for backdated trigger in USER4(Date) parameter. ';
					APPL.runme = 'false';
				}
				else{
					APPL.date = APPL.dt
				}
			}
			else{
				APPL.message = APPL.message + ' Date(USER4)  need to be in YYYY-MM-DD HH:MN or YYYY/MM/DD HH:MN format.';
				APPL.runme = 'false';
			}			
		}
		if (APPL.runme) {
			APPL.message = APPL.message + 'Event ' +APPL._user1+'  trigger request submitted by  '+ APPL._truser +'.';
		}
	}else {
        APPL.message = 'User ' + APPL._truser + ' is not authorized to perform action ' + APPL.action + ' on event  ' + APPL._user1+'.';
        APPL.runme = 'false';
    }
}]]></jav:script_definition>
</jav:JavaScript>